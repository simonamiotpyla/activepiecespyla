{
  "created": "1752584234437",
  "updated": "1752584234437",
  "name": "Ringover Statistics",
  "description": "",
  "tags": [],
  "pieces": [
    "@activepieces/piece-forms",
    "@activepieces/piece-http"
  ],
  "template": {
    "displayName": "Ringover Statistics",
    "trigger": {
      "name": "trigger",
      "valid": true,
      "displayName": "Chat UI",
      "type": "PIECE_TRIGGER",
      "settings": {
        "pieceName": "@activepieces/piece-forms",
        "pieceVersion": "~0.4.3",
        "pieceType": "OFFICIAL",
        "packageType": "REGISTRY",
        "input": {
          "botName": "AI Bot"
        },
        "inputUiInfo": {
          "customizedInputs": {}
        },
        "triggerName": "chat_submission"
      },
      "nextAction": {
        "name": "step_1",
        "skip": false,
        "type": "PIECE",
        "valid": true,
        "settings": {
          "input": {
            "url": "https://public-api.ringover.com/v2/calls\n",
            "body": {
              "data": {
                "filter": "ALL",
                "end_date": "2025-07-13T21:59:59.999Z",
                "start_date": "2025-07-06T22:00:00.000Z",
                "limit_count": 1000
              }
            },
            "method": "POST",
            "headers": {
              "Accept": "application/json",
              "Content-Type": "application/json",
              "Authorization": "cba6835e5cfb34a56f0549755d4b23a236960912"
            },
            "authType": "NONE",
            "body_type": "json",
            "use_proxy": false,
            "authFields": {},
            "queryParams": {},
            "proxy_settings": {}
          },
          "pieceName": "@activepieces/piece-http",
          "pieceType": "OFFICIAL",
          "actionName": "send_request",
          "inputUiInfo": {
            "schema": {
              "body": {
                "data": {
                  "type": "JSON",
                  "required": true,
                  "displayName": "JSON Body"
                }
              },
              "authFields": {},
              "proxy_settings": {}
            },
            "customizedInputs": {
              "queryParams": false
            }
          },
          "packageType": "REGISTRY",
          "pieceVersion": "~0.8.1",
          "errorHandlingOptions": {
            "retryOnFailure": {
              "value": false
            },
            "continueOnFailure": {
              "value": false
            }
          }
        },
        "nextAction": {
          "name": "step_2",
          "skip": false,
          "type": "CODE",
          "valid": true,
          "settings": {
            "input": {
              "body": "{{step_1['body']['call_list']}}"
            },
            "sourceCode": {
              "code": "export const code = async (inputs) => {\n  const calls = inputs.body;\n\n  if (!Array.isArray(calls)) {\n    throw new Error(\"body must be an array of calls\");\n  }\n\n  const totalCalls = calls.length;\n\n  const mainTagMap = {\n    \"Call fail\": 16575522,\n    \"Quick Talk\": 16455521,\n    \"Mauvais Numéro\": 17085525,\n    \"Convo\": 16515534,\n    \"Msg Vocal\": 16515533,\n    \"SQL\": 16845528,\n    \"RIP\": 16995524\n  };\n\n  const tagCounts = {\n    \"Call fail\": 0,\n    \"Quick Talk\": 0,\n    \"Mauvais Numéro\": 0,\n    \"Convo\": 0,\n    \"Msg Vocal\": 0,\n    \"SQL\": 0,\n    \"RIP\": 0\n  };\n\n  for (const call of calls) {\n    const tags = Array.isArray(call.tags) ? call.tags : [];\n    let found = false;\n\n    for (const tag of tags) {\n      const tagId = tag?.tag_id;\n\n      for (const [name, id] of Object.entries(mainTagMap)) {\n        if (tagId === id) {\n          tagCounts[name]++;\n          found = true;\n          break; // on compte un seul main tag par appel\n        }\n      }\n\n      if (found) break;\n    }\n  }\n\n  const mainStats = Object.entries(tagCounts).map(([tag, count]) => {\n    const percentage = totalCalls > 0 ? Math.round((count / totalCalls) * 100) : 0;\n    return {\n      tag: `${tag}: ${count} (${percentage}%)`,\n      count,\n      percentage\n    };\n  });\n\n  return {\n    mainStats,\n    totalCalls\n  };\n};\n",
              "packageJson": "{}"
            },
            "inputUiInfo": {
              "customizedInputs": {}
            },
            "errorHandlingOptions": {
              "retryOnFailure": {
                "value": false
              },
              "continueOnFailure": {
                "value": false
              }
            }
          },
          "displayName": "compute_main_tags"
        },
        "displayName": "get_ringover_calls"
      }
    },
    "valid": true,
    "connectionIds": [],
    "schemaVersion": "2"
  },
  "blogUrl": ""
}